// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM512[address(t)](t)
 *     Write: If load(t-1) then RAM512[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address[6..8],
					a=sel1, b=sel2, c=sel3, d=sel4,
					e=sel5, f=sel6, g=sel7, h=sel8);

	RAM64(in=in, load=sel1, address=address[0..5], out=out1);
	RAM64(in=in, load=sel2, address=address[0..5], out=out2);
	RAM64(in=in, load=sel3, address=address[0..5], out=out3);
	RAM64(in=in, load=sel4, address=address[0..5], out=out4);
	RAM64(in=in, load=sel5, address=address[0..5], out=out5);
	RAM64(in=in, load=sel6, address=address[0..5], out=out6);
	RAM64(in=in, load=sel7, address=address[0..5], out=out7);
	RAM64(in=in, load=sel8, address=address[0..5], out=out8);

	Mux8Way16(a=out1, b=out2, c=out3, d=out4,
			  e=out5, f=out6, g=out7, h=out8, sel=address[6..8], out=out);
}
